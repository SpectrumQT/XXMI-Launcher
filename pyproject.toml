[tool.poetry]
name = "xxmi-launcher"
version = "0.1.0"
description = "XXMI Launcher - A launcher tool for various game model importers"
authors = ["XXMI Team"]
readme = "README.md"
packages = [{include = "xxmi_launcher", from = "src"}]

[tool.poetry.dependencies]
python = ">3.9.1,<4.0"
certifi = "^2025.4.26"
cffi = "^1.17.1"
charset-normalizer = "^3.4.2"
cryptography = "^44.0.2"
customtkinter = "^5.2.2"
dacite = "^1.9.2"
darkdetect = "^0.8.0"
idna = "^3.10"
Markdown = "^3.8"
Nuitka = "^2.7"
ordered-set = "^4.1.0"
packaging = "^25.0"
pillow = "^11.2.1"
psutil = "^7.0.0"
py-gfm = "^2.0.0"
pycparser = "^2.22"
pyglet = "^2.1.6"
pyinjector = "^1.3.0"
PySocks = "^1.7.1"
pywin32 = {version = "^310", markers = "sys_platform == 'win32'"}
requests = "^2.32.3"
tkinterweb = "^4.3.1"
tkinterweb-tkhtml = "^1.0"
urllib3 = "^2.4.0"
winshell = {version = "^0.6", markers = "sys_platform == 'win32'"}
WMI = {version = "^1.5.1", markers = "sys_platform == 'win32'"}
zstandard = "^0.23.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/xxmi_launcher",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=0",  # TODO: Increase to 80 once tests are written
]
console_output_style = "progress"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src/xxmi_launcher"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true
skip_covered = true
fail_under = 0  # TODO: Increase to 80 once tests are written

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"